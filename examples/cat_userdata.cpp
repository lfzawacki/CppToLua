/*
	Lua bindings for class Cat
	This file was automatically generated by cpptolua

*/

#include "your_header_name_here.h"

int Cat_magic(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	c->magic();
}

int Cat_damage(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	int d = luaL_checknumber(L, 2);
	c->damage(d);
}

int Cat_getPancakeMix(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	lua_pushnumber(L, c->getPancakeMix());
}

int Cat_setPancakeMix(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	int pan = luaL_checknumber(L, 2);
	c->setPancakeMix(pan);
}

int Cat_sleep(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	c->sleep();
}

int Cat_query(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	c->query();
}

int Cat_meow(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	c->meow();
}

int Cat_makeCake(lua_State* L)
{
	Cat *c = (Cat*) lua_touserdata(L, 1);
	lua_pushnumber(L, c->makeCake());
}

int Cat_new(lua_State* L)
{
	Cat *p = new Cat();
	Cat lua_pushlightuserdata(L,p);
	luaL_getmetatable(L, "Cat");
	lua_setmetatable(L, -2);
	return 1;
}

const struct luaL_reg Catlib [] = {
	{"new", Cat_new },
	{NULL,NULL}
};

static const luaL_reg Cat_meta[] = {
	{ "magic" , Cat_magic },
	{ "damage" , Cat_damage },
	{ "getPancakeMix" , Cat_getPancakeMix },
	{ "setPancakeMix" , Cat_setPancakeMix },
	{ "sleep" , Cat_sleep },
	{ "query" , Cat_query },
	{ "meow" , Cat_meow },
	{ "makeCake" , Cat_makeCake },
	{NULL,NULL}
};

Cat* toCat(lua_State *L, int index)
{
	Cat *p = (Cat*) lua_touserdata(L,index);
	if (p == NULL) luaL_typerror(L,index,"Cat");
	return p;
}

Cat* checkCat(lua_State *L, int index)
{
	Cat *p;
	luaL_checktype(L, index, LUA_TUSERDATA);
	p = (Cat*) luaL_checkudata(L, index, "Cat");
	if (p == NULL) luaL_typerror(L, index, "Cat");
	return p
}

int luaopen_Cat(lua_State *L)
{
	luaL_newmetatable(L, "Cat")
	lua_pushstring(L, "__index");
	lua_pushvalue(L, -2);
	lua_settable(L, -3);
	luaL_openlib(L, NULL, Cat_meta, 0);
	luaL_openlib(L, "Cat", Catlib, 0);
	return 1;
}
